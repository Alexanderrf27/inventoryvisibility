package com.visibility.algorithm.product.core.domain.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.*;


/**
 * This class is the entity representation of the Size domain for the application.
 *
 * The '@Data' annotation provides getter, setter, equals, hashCode, and toString methods.
 *
 * The '@ToString' annotation indicates that the toString method should be generated by Lombok.
 *
 * The '@Builder' annotation produces complex builder APIs for your classes.
 *
 * The '@NoArgsConstructor' and '@AllArgsConstructor' annotations provide constructors with no arguments and all arguments respectively.
 *
 * The '@Entity' annotation specifies that the class is an entity and is mapped to a database table.
 *
 * The '@Table' annotation specifies the name of the database table to be used for mapping.
 */
@Data
@ToString
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "SIZE-DOMAIN")
public class SizeDomain {

    /**
     * The ID of the size.
     *
     * The '@Id' annotation specifies the primary key of an entity.
     *
     * The '@Column' annotation is used to specify the mapped column for a persistent property or field.
     */
    @Id
    @Column(name = "ID")
    private Integer id;

    /**
     * The ID of the product associated with the size.
     *
     * The '@Column' annotation is used to specify the mapped column for a persistent property or field.
     */
    @Column(name = "PRODUCT_ID")
    private int productId;

    /**
     * Indicator if the size will be back soon.
     *
     * The '@Column' annotation is used to specify the mapped column for a persistent property or field.
     */
    @Column(name = "BACKS-OOM")
    private boolean backSoon;

    /**
     * Indicator if the size is special.
     *
     * The '@Column' annotation is used to specify the mapped column for a persistent property or field.
     */
    @Column(name = "SPECIAL")
    private boolean special;
}
